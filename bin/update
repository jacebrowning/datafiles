#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
from contextlib import suppress
import importlib
import tempfile
import shutil
import subprocess
import sys


CWD = os.getcwd()
TMP = tempfile.gettempdir()
CONFIG = {
    "full_name": "Jace Browning",
    "email": "jacebrowning@gmail.com",
    "github_username": "jacebrowning",
    "github_repo": "datafiles",
    "default_branch": "main",
    "project_name": "datafiles",
    "package_name": "datafiles",
    "project_short_description": "File-based ORM for dataclasses.",
    "python_major_version": 3,
    "python_minor_version": 7,
}


def install(package="cookiecutter"):
    try:
        importlib.import_module(package)
    except ImportError:
        print("Installing cookiecutter")
        subprocess.check_call([sys.executable, "-m", "pip", "install", package])


def run():
    print("Generating project")

    from cookiecutter.main import cookiecutter

    os.chdir(TMP)
    cookiecutter(
        "https://github.com/jacebrowning/template-python.git",
        no_input=True,
        overwrite_if_exists=True,
        extra_context=CONFIG,
    )


def copy():
    for filename in [
        os.path.join("bin", "update"),
        os.path.join("bin", "checksum"),
        os.path.join("bin", "open"),
        os.path.join("bin", "verchew"),
        ".appveyor.yml",
        ".coveragerc",
        ".gitattributes",
        ".gitignore",
        ".pydocstyle.ini",
        ".pylint.ini",
        ".scrutinizer.yml",
        ".tool-versions",
        ".verchew.ini",
        "CONTRIBUTING.md",
        "Makefile",
        "scent.py",
    ]:
        src = os.path.join(TMP, CONFIG["project_name"], filename)
        dst = os.path.join(CWD, filename)
        print("Updating " + filename)
        with suppress(FileNotFoundError):
            shutil.copy(src, dst)


if __name__ == "__main__":
    install()
    run()
    copy()
